{"version":3,"sources":["components/contactForm/ContactForm.js","components/contactList/contactItem/ContactItem.js","components/contactList/ContactList.js","components/filter/Filter.js","components/App.js","index.js"],"names":["ContactForm","contacts","getContacts","newContact","handleChange","target","name","value","onSubmit","ev","preventDefault","reset","flag","undefined","number","alert","map","el","className","type","placeholder","onChange","ContactItem","id","delItem","onClick","ContactList","filteredItems","getIdForDelete","key","Filter","getNamesByFilter","App","state","filter","uuidv4","setState","prev","deleteContact","newContacts","elem","prevProps","prevState","this","localStorage","setItem","JSON","stringify","dataFromStorage","getItem","parse","toLowerCase","includes","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.814cb8ca.chunk.js","sourcesContent":["import React from 'react';\n\nconst ContactForm = ({contacts, getContacts}) => {\n  const newContact = {};\n  \n  const handleSubmit = (ev) => {\n    ev.preventDefault();\n\n    const form = ev.target;\n    form.reset();\n    let flag = true;\n    if(newContact.name === undefined || newContact.number === undefined){\n      alert(`You have not completed all the fields or the values ​​are repeated`);\n    }else{\n      contacts.map(el => ( el.name === newContact.name ? flag = false : ''));\n      flag ? getContacts(newContact) : alert(`${newContact.name} is already in contacts`);\n    }\n    \n  }\n\n  const handleChange = ({target:{name,value}}) => {\n    newContact[name]=value\n  }\n\n  return(\n    <>\n      <form onSubmit={handleSubmit}>\n        <label className='text'>Name\n          <input className='input' type=\"text\" placeholder=\"Enter name\" \n          name='name' onChange={handleChange}/>\n        </label>\n        <label className='text'>Number\n          <input className='input' type=\"text\"  placeholder=\"Enter number\"\n          name='number' onChange={handleChange}/>\n        </label>\n        <button className='btn' type='submit'>Add contact</button>\n      </form>\n      </>\n  )\n}\n\nexport default ContactForm;","import React from 'react';\n\nconst ContactItem = ({name, number, id, delItem}) => {\n const deleteItem =()=>{\n  delItem(id);\n }\n  return(\n    <li className='list__item'>\n      <p className='text'>{name}: {number}</p>\n      <button className='btn' onClick={deleteItem}>delete</button>\n    </li>\n  )\n}\n\nexport default ContactItem;","import React from 'react';\nimport ContactItem from './contactItem/ContactItem'\n\nconst ContactList = ({filteredItems, getIdForDelete}) => {\n\n  const delItem = (id) => {\n    getIdForDelete(id)\n  }\n\n  return(\n    <>\n    <ul>\n      {\n        filteredItems.map(({name,number,id})=>(\n          <ContactItem key={id} id={id} name={name} number={number} delItem={delItem}/>\n        ))\n      }\n    </ul>\n    </>\n  )\n}\nexport default ContactList;","import React from 'react';\n\nconst Filter = ({getNamesByFilter}) => {\n\n  const getValue = ({target: {value}})=> {\n    getNamesByFilter(value)\n  }\n\n  return(\n    <>\n      <h3 className='title'>Find contacts by name</h3>\n      <input className='input' onChange={getValue} type='text' name='filter' placeholder='Enter name'></input>\n    </>\n  )\n}\nexport default Filter;","import React from 'react';\nimport ContactForm from './contactForm/ContactForm';\nimport ContactList from './contactList/ContactList';\nimport { v4 as uuidv4 } from 'uuid';\nimport Filter from './filter/Filter';\n\n\nclass App extends React.Component {\n\n  state = {\n    contacts: [],\n    filter: ''\n  }\n\n  getContacts = (newContact) => {\n    newContact['id'] = uuidv4();\n    this.setState((prev) => ({...prev, contacts: [...prev.contacts, newContact]}))\n  }\n\n  deleteContact = (id) => {\n    const newContacts = this.state.contacts.filter((elem) => { return elem.id !== id})\n    this.setState((prev) => ({...prev, contacts:[...newContacts]}))\n\n  }\n\n  getNamesByFilter = (value) => {\n    this.setState({filter : value});\n  }\n\n  componentDidUpdate(prevProps, prevState){\n    if(this.state.contacts !== prevState.contacts){\n      localStorage.setItem('contacts' ,JSON.stringify(this.state.contacts));\n    }\n  }\n\n  componentDidMount(){\n    const dataFromStorage = localStorage.getItem('contacts');\n    const contacts = JSON.parse(dataFromStorage);\n    if(contacts){\n      this.setState({contacts:contacts}) \n    }\n  }\n\n  render(){\n    let filteredItems;\n    this.state.filter ? filteredItems = this.state.contacts.filter(el => (\n        el.name.toLowerCase().includes(this.state.filter.toLowerCase())))\n      : filteredItems = this.state.contacts;\n      \n    return (\n      <>\n        <h1 className=\"title\">Phonebook</h1>\n        <ContactForm {...this.state} getContacts={this.getContacts}/>\n        <h2 className=\"title\">Contacts</h2>\n        <Filter getNamesByFilter = {this.getNamesByFilter}/>\n        <ContactList filteredItems={filteredItems} getIdForDelete={this.deleteContact}/>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App'\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}